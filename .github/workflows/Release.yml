name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'     
        required: true
        type: string

jobs:
  release:
    runs-on: macOS-12
    steps:

      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          repository: ${{secrets.RESPOSITORY}}
          token: ${{secrets.PAT}}
          path: 'xray'
          
      - name: Setup Go
        uses: actions/setup-go@v3.5.0
        with:
          go-version: '1.20'
      
      - name: Setup Gomobile
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          
      - name: Build xcframework
        run: |
          cd xray
          make
          zip -ry XrayKit.xcframework.zip ./XrayKit.xcframework
          
      - name: Detect checksum
        run: |
          export TEMP=`shasum -a 256 xray/XrayKit.xcframework.zip`
          export CHECKSUM=${TEMP:0:64}
          echo "FILE_CHECKSUM=${CHECKSUM}" >> $GITHUB_ENV
          unset CHECKSUM
          unset TEMP
          
      - name: Update package file
        run: |
          echo "// swift-tools-version: 5.7" > Package.swift
          echo "" >> Package.swift
          echo "import PackageDescription" >> Package.swift
          echo "" >> Package.swift
          echo "let package = Package(" >> Package.swift
          echo "  name: \"XrayKit\"," >> Package.swift
          echo "  products: [" >> Package.swift
          echo "    .library(name: \"XrayKit\", targets: [\"XrayKit\"])" >> Package.swift
          echo "  ]," >> Package.swift
          echo "  targets: [" >> Package.swift
          echo "    .binaryTarget(" >> Package.swift
          echo "      name: \"XrayKit\"," >> Package.swift
          echo "      url: \"https://github.com/daemooon/XrayKit/releases/download/${{ github.event.inputs.version }}/XrayKit.xcframework.zip\"," >> Package.swift
          echo "      checksum: \"${{ env.FILE_CHECKSUM }}\"" >> Package.swift
          echo "    )" >> Package.swift
          echo "  ]" >> Package.swift
          echo ")" >> Package.swift
          
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: XrayKit Release ${{ github.event.inputs.version }}!!!
          commit_user_name: Arror
          commit_user_email: hallo.maqiang@icloud.com
          tagging_message: ${{ github.event.inputs.version }}
          file_pattern: 'Package.swift'
          
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          tag_name: ${{ github.event.inputs.version }}
          files: xray/XrayKit.xcframework.zip
